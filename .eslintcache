[{"C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\index.js":"1","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\reportWebVitals.js":"2","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\store\\reducers\\index.js":"3","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\App.js":"4","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\store\\reducers\\login-reducer.js":"5","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\store\\reducers\\suggestion-reducer.js":"6","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\LoginNSignup\\LoginNSignup.js":"7","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionCreationPage\\MotionCreationPage.js":"8","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\components\\NavBar\\NavBar.js":"9","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionVotingPage\\MotionVotingPage.js":"10","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\HomePage\\HomePage.js":"11","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\TestRedux.js":"12","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\Motion\\MotionPage.js":"13","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\store\\actions\\actionTypes.js":"14","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionCreationPage\\BuildMotionCreationPage\\BuildMotionCreationPage.js":"15","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionCreationPage\\BuildCheckoutPage\\BuildCheckoutPage.js":"16","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\api\\api.js":"17","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\components\\HomePageWelcome\\HomePageWelcome.js":"18","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\components\\MultiSelector\\SelectedItems\\SelectedItems.js":"19","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\components\\Drawer.js":"20","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionVotingPage\\BuildVotePage\\BuildVotePage.js":"21","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionVotingPage\\BuildVotePage\\BuildOwnerVotePage.js":"22","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\components\\MultiSelector\\MultiSelector.js":"23","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\components\\MultiSelector\\MultiVotingSelector.js":"24","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionCreationPage\\BuildCheckoutPage\\CustomDialogContent.js":"25","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\api\\dummydb.js":"26","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\components\\HomePageWelcome\\WelcomeTitle\\WelcomeTitle.js":"27","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionVotingPage\\BuildMotionWinnerPage\\BuildMotionWinnerPage.js":"28","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\components\\HomePageWelcome\\WelcomeMessage\\WelcomeMessage.js":"29","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionVotingPage\\BuildSuggestionPage\\BuildOwnerSuggestionPage.js":"30","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionVotingPage\\BuildSuggestionPage\\BuildSuggestionPage.js":"31","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionVotingPage\\BuildFinalVotePage\\BuildFinalVotePage.js":"32","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\components\\MultiSelector\\SelectedItems\\SelectedVotingItems.js":"33","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\HomePage\\HomePageMotions.js":"34","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionVotingPage\\BuildVotePage\\SuggestionsDialog.js":"35","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionVotingPage\\BuildVotePage\\MakeSuggestionsDialog.js":"36","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\components\\MultiSelector\\SelectedItems\\BuildVotingItem.js":"37","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionWinnerPage\\MotionWinnerPage.js":"38"},{"size":837,"mtime":1609643676222,"results":"39","hashOfConfig":"40"},{"size":375,"mtime":1609643676275,"results":"41","hashOfConfig":"40"},{"size":364,"mtime":1609643676279,"results":"42","hashOfConfig":"40"},{"size":1618,"mtime":1609723478656,"results":"43","hashOfConfig":"40"},{"size":389,"mtime":1609643676279,"results":"44","hashOfConfig":"40"},{"size":387,"mtime":1609643676280,"results":"45","hashOfConfig":"40"},{"size":4705,"mtime":1609643676225,"results":"46","hashOfConfig":"40"},{"size":4007,"mtime":1609724972482,"results":"47","hashOfConfig":"40"},{"size":1742,"mtime":1609643676220,"results":"48","hashOfConfig":"40"},{"size":3131,"mtime":1609730273877,"results":"49","hashOfConfig":"40"},{"size":1975,"mtime":1609731044312,"results":"50","hashOfConfig":"40"},{"size":729,"mtime":1609643676275,"results":"51","hashOfConfig":"40"},{"size":1213,"mtime":1609643676226,"results":"52","hashOfConfig":"40"},{"size":180,"mtime":1609643676277,"results":"53","hashOfConfig":"40"},{"size":1825,"mtime":1609724810367,"results":"54","hashOfConfig":"40"},{"size":2689,"mtime":1609693130059,"results":"55","hashOfConfig":"40"},{"size":4224,"mtime":1609705190867,"results":"56","hashOfConfig":"40"},{"size":614,"mtime":1609643676171,"results":"57","hashOfConfig":"40"},{"size":424,"mtime":1609643676208,"results":"58","hashOfConfig":"40"},{"size":1107,"mtime":1609726724638,"results":"59","hashOfConfig":"40"},{"size":5000,"mtime":1609715948798,"results":"60","hashOfConfig":"40"},{"size":6026,"mtime":1609723696427,"results":"61","hashOfConfig":"40"},{"size":2258,"mtime":1609693896474,"results":"62","hashOfConfig":"40"},{"size":2714,"mtime":1609711465408,"results":"63","hashOfConfig":"40"},{"size":2563,"mtime":1609693126929,"results":"64","hashOfConfig":"40"},{"size":2692,"mtime":1609643676160,"results":"65","hashOfConfig":"40"},{"size":409,"mtime":1609643676184,"results":"66","hashOfConfig":"40"},{"size":473,"mtime":1609643676261,"results":"67","hashOfConfig":"40"},{"size":731,"mtime":1609643676172,"results":"68","hashOfConfig":"40"},{"size":1171,"mtime":1609700311130,"results":"69","hashOfConfig":"40"},{"size":2440,"mtime":1609696606422,"results":"70","hashOfConfig":"71"},{"size":3518,"mtime":1609643676250,"results":"72","hashOfConfig":"40"},{"size":638,"mtime":1609710370386,"results":"73","hashOfConfig":"40"},{"size":914,"mtime":1609726596876,"results":"74","hashOfConfig":"40"},{"size":1251,"mtime":1609710709333,"results":"75","hashOfConfig":"40"},{"size":2819,"mtime":1609733585506,"results":"76","hashOfConfig":"40"},{"size":3074,"mtime":1609727013368,"results":"77","hashOfConfig":"40"},{"size":1530,"mtime":1609725809375,"results":"78","hashOfConfig":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"p3oyk9",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"81"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"81"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"81"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"81"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"81"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"81"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"81"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"81"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"81"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"81"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"81"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"81"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"81"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"81"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"81"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"81"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"81"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"81"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1bxn6ev",{"filePath":"160","messages":"161","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"81"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"81"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"81"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"81"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"81"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"81"},"C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\index.js",[],["180","181"],"C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\reportWebVitals.js",[],"C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\store\\reducers\\index.js",[],"C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\App.js",["182"],"import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\n\r\nimport TestRedux from \"./pages/TestRedux\";\r\nimport LoginNSignup from \"./pages/LoginNSignup/LoginNSignup\";\r\nimport NavBar from \"./components/NavBar/NavBar\";\r\nimport HomePage from \"./pages/HomePage/HomePage\";\r\nimport MotionCreationPage from \"./pages/MotionCreationPage/MotionCreationPage\";\r\n\r\nimport MotionVotingPage from \"./pages/MotionVotingPage/MotionVotingPage\";\r\n\r\nimport MotionPage from \"./pages/Motion/MotionPage\";\r\nimport MotionWinnerPage from \"./pages/MotionWinnerPage/MotionWinnerPage\";\r\n\r\nfunction App() {\r\n  const [background, setBackground] = useState(false);\r\n  function handleClick() {\r\n    setBackground(!background);\r\n  }\r\n  return (\r\n    <div className={background ? \"showcase\" : \"showcase Shrink\"}>\r\n      <Router>\r\n        <NavBar onNavBarClick={handleClick}></NavBar>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={HomePage} />\r\n          <Route exact path=\"/login\" component={LoginNSignup} />\r\n          <Route exact path=\"/motion\" component={MotionPage} />\r\n          <Route exact path=\"/motion-creation\" component={MotionCreationPage} />\r\n          <Route exact path=\"/motion-vote\" component={MotionVotingPage} />\r\n          <Route exact path=\"/reduxTest\" component={TestRedux} />\r\n          <Route exact path=\"/motion-winner\" component={MotionWinnerPage} />\r\n          <Route path=\"/\" render={() => <div>404 NOT FOUND :)</div>} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\store\\reducers\\login-reducer.js",["183"],"// reducer descripes how does the state transfer from current state to next state.\r\n// logged in, log out.\r\n// When action is been called, reducer will check action type and modifly the store.\r\n\r\nconst loginReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'SIGN_IN' :\r\n            return !state;\r\n    }\r\n    return state;  \r\n};\r\nexport default loginReducer;","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\store\\reducers\\suggestion-reducer.js",[],"C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\LoginNSignup\\LoginNSignup.js",["184"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Login } from \"../../api/api\";\r\nimport \"./LoginNSignup.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { login } from \"../../store/actions/actionTypes\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction LoginNSignup() {\r\n  const isLogged = useSelector((state) => state.isLogged);\r\n  const dispatch = useDispatch();\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [signupFormData, setSignupFormData] = useState({\r\n    name: \"\",\r\n    password: \"\",\r\n    confirmPass: \"\",\r\n  });\r\n\r\n  // Check if logged in, if yes, send to normal page\r\n  if (localStorage.getItem(\"token\") !== null) {\r\n    return <Redirect to=\"\" />;\r\n  }\r\n  if (redirect) {\r\n    return <Redirect to=\"\" />;\r\n  }\r\n  const doLogin = async (e) => {\r\n    e.preventDefault();\r\n    await handleLogin(e);\r\n    if (localStorage.getItem(\"token\") !== null) {\r\n      setRedirect(true);\r\n    }\r\n    try {\r\n      await Login(formData.username, formData.password);\r\n      console.log(\"clicked\");\r\n    } catch {\r\n      console.log(\"couldn't login\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n    await axios\r\n      .post(\"http://localhost:5000/api/auth/signin\", {\r\n        name: formData.username,\r\n        password: formData.password,\r\n      })\r\n      .then((response) => {\r\n        console.log(\"Successful user login: \", response.data);\r\n        localStorage.setItem(\"token\", response.data.accessToken);\r\n        localStorage.setItem(\"name\", response.data.name);\r\n        localStorage.setItem(\"id\", response.data.id);\r\n        localStorage.setItem(\"admin\", response.data.admin);\r\n        //Need to store the user name and id as well\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const handleSignupFormChange = (event) => {\r\n    setSignupFormData({\r\n      ...signupFormData,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSignUp = (event) => {\r\n    event.preventDefault();\r\n    if (signupFormData.password == signupFormData.confirmPass) {\r\n      axios\r\n        .post(\"http://localhost:5000/api/auth/signup\", signupFormData)\r\n        .then((response) => {\r\n          console.log(\"Successful user creation: \", response.data);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } else {\r\n      console.log(\r\n        \"password and confirmed passwords do not match, please spell better.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  if (isLogged) {\r\n    return (\r\n      <div className=\"login-page\">\r\n        <div className=\"login-form\">\r\n          <div className=\"login-toggle-buttons\">\r\n            <h1>Login</h1>\r\n            <h1 onClick={() => dispatch(login())}>Sign-Up</h1>\r\n          </div>\r\n\r\n          <form onSubmit={doLogin}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              placeholder=\"username\"\r\n              value={formData[\"username\"]}\r\n              onChange={handleChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"password\"\r\n              placeholder=\"password\"\r\n              value={formData[\"password\"]}\r\n              onChange={handleChange}\r\n            />\r\n            <input type=\"submit\" value=\"Login\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"newuser-page\">\r\n        <div className=\"login-form\">\r\n          <div className=\"login-toggle-buttons\">\r\n            <h1 onClick={() => dispatch(login())}>Login</h1>\r\n            <h1>Sign-Up</h1>\r\n          </div>\r\n          <form onSubmit={handleSignUp}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"username\"\r\n              value={signupFormData.name}\r\n              onChange={handleSignupFormChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"password\"\r\n              placeholder=\"password\"\r\n              value={signupFormData.password}\r\n              onChange={handleSignupFormChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"confirmPass\"\r\n              placeholder=\"confirm-password\"\r\n              value={signupFormData.confirmPass}\r\n              onChange={handleSignupFormChange}\r\n            />\r\n            <input type=\"submit\" value=\"Create User\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default LoginNSignup;\r\n","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionCreationPage\\MotionCreationPage.js",["185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./MotionCreationPage.css\";\r\nimport SelectedItems from \"../../components/MultiSelector/SelectedItems/SelectedItems\";\r\nimport { GiKnifeFork } from \"react-icons/gi\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { BsPersonFill } from \"react-icons/bs\";\r\nimport { CustomDialog, useDialog } from \"react-st-modal\";\r\nimport BuildMotionCreationPage from \"./BuildMotionCreationPage/BuildMotionCreationPage\";\r\nimport BuildCheckoutPage from \"./BuildCheckoutPage/BuildCheckoutPage\";\r\nimport { addMotion, getChoices, getUsers } from \"../../api/api\";\r\nimport Axios, { axios } from \"axios\";\r\nimport UseAnimations from \"react-useanimations\";\r\nimport loading from \"react-useanimations/lib/loading\";\r\n\r\nexport default function MotionCreationPage() {\r\n  const [restaurants, setRestaurants] = useState([]);\r\n  const [selectedRestaurantIDs, setSelectedRestaurantIDs] = useState([]);\r\n  const [friends, setFriends] = useState([]);\r\n  const [selectedFriendIDs, setSelectedFriendIDs] = useState([]);\r\n  const [selectedRestaurants, setSelectedRestaurants] = useState([]);\r\n  const [selectedFriends, setSelectedFriends] = useState([]);\r\n  const [action, setAction] = useState(1);\r\n  const [open, setOpen] = useState(false);\r\n  const [complete, setComplete] = useState(false);\r\n\r\n  function handleClick(type, selectedItems) {\r\n    if (type === \"Restaurants\") {\r\n      if (selectedItems.length === 4) {\r\n        setAction(action + 1);\r\n      }\r\n    } else {\r\n      setAction(action + 1);\r\n    }\r\n  }\r\n\r\n  function handleRestaurants(selectedChoices) {\r\n    setSelectedRestaurants(selectedChoices);\r\n    setSelectedRestaurantIDs(selectedChoices.map((el) => el.id));\r\n  }\r\n\r\n  function handleFriends(selectedChoices) {\r\n    setSelectedFriends(selectedChoices);\r\n    setSelectedFriendIDs(selectedChoices.map((el) => el.id));\r\n  }\r\n\r\n  useEffect(async () => {\r\n    let mounted = true;\r\n    const poll = async () => {\r\n      if (!mounted) {\r\n        return;\r\n      }\r\n\r\n      console.log(\"polling\");\r\n\r\n      if (mounted) {\r\n        const restaurantsResult = await getChoices();\r\n        const friendsResult = await getUsers();\r\n        setRestaurants(restaurantsResult);\r\n        setFriends(friendsResult);\r\n        setComplete(true);\r\n        if (action !== 3) {\r\n          console.log(action);\r\n          setTimeout(() => poll(), 2500);\r\n        }\r\n      }\r\n    };\r\n\r\n    const onMount = async () => {\r\n      console.log(\"mounting\");\r\n      poll();\r\n    };\r\n\r\n    const onUnmount = async () => {\r\n      console.log(\"running unmounted\");\r\n      mounted = false;\r\n    };\r\n\r\n    onMount();\r\n\r\n    return onUnmount;\r\n  }, []);\r\n\r\n  //console.log(restaurants);\r\n  //console.log(selectedRestaurants);\r\n\r\n  switch (complete) {\r\n    case true:\r\n      switch (action) {\r\n        case 1:\r\n          // TODO API call for Restaurants\r\n          return (\r\n            <BuildMotionCreationPage\r\n              type=\"Restaurants\"\r\n              items={restaurants}\r\n              selectedItems={selectedRestaurants}\r\n              selectedItemIDs={selectedRestaurantIDs}\r\n              setSelectedItems={handleRestaurants}\r\n              handleClick={handleClick}\r\n            />\r\n          );\r\n\r\n        case 2:\r\n          // TODO API Call for Friends\r\n          return (\r\n            <BuildMotionCreationPage\r\n              type=\"Friends\"\r\n              items={friends}\r\n              selectedItems={selectedFriends}\r\n              selectedItemIDs={selectedFriendIDs}\r\n              setSelectedItems={handleFriends}\r\n              handleClick={handleClick}\r\n            />\r\n          );\r\n\r\n        case 3:\r\n          return (\r\n            <BuildCheckoutPage\r\n              selectedFriends={selectedFriends}\r\n              selectedRestaurants={selectedRestaurants}\r\n            ></BuildCheckoutPage>\r\n          );\r\n      }\r\n    case false:\r\n      return (\r\n        <div className=\"home-page\">\r\n          <UseAnimations animation={loading} size={70} />\r\n        </div>\r\n      );\r\n  }\r\n}\r\n","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\components\\NavBar\\NavBar.js",[],"C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionVotingPage\\MotionVotingPage.js",["201","202","203","204","205","206"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./MotionVotingPage.css\";\r\nimport { getMotionChoices } from \"../../api/api\";\r\nimport BuildVotePage from \"./BuildVotePage/BuildVotePage\";\r\nimport BuildOwnerVotePage from \"./BuildVotePage/BuildOwnerVotePage\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport UseAnimations from \"react-useanimations\";\r\nimport loading from \"react-useanimations/lib/loading\";\r\n\r\n/**\r\n *\r\n * @param {props.location.state.motionId} props\r\n * Can only access this page via redirect from homepage\r\n */\r\nexport default function MotionVotingPage(props) {\r\n  const [motionId, setMotionId] = useState();\r\n  const [motionChoices, setMotionChoices] = useState([]);\r\n  const userId = localStorage.getItem(\"id\");\r\n  const [motionOwnerId, setMotionOwnerId] = useState(-1);\r\n  const [complete, setComplete] = useState(false);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [motionStatus, setMotionStatus] = useState(false);\r\n\r\n  useEffect(async (e) => {\r\n    if (props.location.state === undefined || props.location.state === null) {\r\n      setRedirect(true);\r\n    } else {\r\n      setMotionId(props.location.state.motionId);\r\n      const result = await axios\r\n        .get(\r\n          `http://localhost:5000/motionchoices/${props.location.state.motionId}`,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n            },\r\n          }\r\n        )\r\n        .then(async (res) => {\r\n          setMotionChoices(res.data);\r\n          console.log(res.data);\r\n          const resp = await axios.get(\r\n            `http://localhost:5000/motions/${props.location.state.motionId}`,\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n              },\r\n            }\r\n          );\r\n          // setMotionStatus(resp.data.status)\r\n          setMotionOwnerId(resp.data.owner_id.id);\r\n          setMotionStatus(resp.data.status);\r\n          setComplete(true);\r\n          return \"\";\r\n        })\r\n        .catch((e) => {\r\n          console.log(\"here\");\r\n          setRedirect(true);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  if (motionStatus) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/motion-winner\",\r\n          state: {\r\n            motionId: motionId,\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  //   const motionId = motionChoices.map((a) => a.motion.id);\r\n  // TODO add condition back\r\n  //   userId != motionOwnerId ?\r\n  switch (complete) {\r\n    case true:\r\n      return userId == motionOwnerId ? (\r\n        <BuildOwnerVotePage\r\n          type=\"Vote\"\r\n          motionChoices={motionChoices}\r\n          motionID={motionId}\r\n        />\r\n      ) : (\r\n        <BuildVotePage\r\n          type=\"Vote\"\r\n          motionChoices={motionChoices}\r\n          motionID={motionId}\r\n        />\r\n      );\r\n    case false:\r\n      return (\r\n        <div className=\"loading-data\">\r\n          <UseAnimations animation={loading} size={70} />\r\n        </div>\r\n      );\r\n  }\r\n}\r\n","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\HomePage\\HomePage.js",["207","208"],"import React, { useState, useEffect } from \"react\";\r\nimport { getMotions } from \"../../api/api\";\r\nimport \"./HomePage.css\";\r\nimport HomePageWelcome from \"./../../components/HomePageWelcome/HomePageWelcome\";\r\nimport HomePageMotions from \"./HomePageMotions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport UseAnimations from \"react-useanimations\";\r\nimport loading from \"react-useanimations/lib/loading\";\r\n\r\nexport default function HomePage() {\r\n  const [motions, setMotion] = useState([]);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [motionId, setMotionId] = useState(-1);\r\n  const [complete, setComplete] = useState(false);\r\n\r\n  useEffect(async () => {\r\n    await getMotions()\r\n      .then((resp) => {\r\n        setMotion(resp);\r\n        setComplete(true);\r\n      })\r\n      .catch((e) => {\r\n        setMotion(null);\r\n        setComplete(true);\r\n      });\r\n  }, []);\r\n\r\n  if (redirect) {\r\n    console.log(motionId);\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/motion-vote\",\r\n          state: {\r\n            motionId: motionId,\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  function handleClick(motionId) {\r\n    setMotionId(motionId);\r\n    setRedirect(true);\r\n  }\r\n\r\n  switch (complete) {\r\n    case true:\r\n      if (\r\n        localStorage.getItem(\"token\") === null ||\r\n        localStorage.getItem(\"token\") === undefined\r\n      ) {\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n      return (\r\n        <>\r\n          <div className=\"home-page\">\r\n            {motions.length === 0 && <HomePageWelcome />}\r\n            {motions.length !== 0 && (\r\n              <HomePageMotions\r\n                motions={motions}\r\n                handleClick={(motionId) => handleClick(motionId)}\r\n              />\r\n            )}\r\n          </div>\r\n        </>\r\n      );\r\n    case false:\r\n      return (\r\n        <div className=\"home-page\">\r\n          <UseAnimations animation={loading} size={70} />\r\n        </div>\r\n      );\r\n  }\r\n}\r\n","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\TestRedux.js",["209","210"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function TestRedux (props){\r\n    const [winner, setWinner] = useState(\"\");\r\n    \r\n        useEffect(async (e) => {\r\n             await axios.get(`http://localhost:5000/motions/${props.motionID}`, { \r\n                headers: {\"Authorization\" : `Bearer ${localStorage.getItem(\"token\")}`}}).then(res => {\r\n                    console.log(res.data.winner.name)\r\n                    setWinner(res.data.winner.name);\r\n                });\r\n            },[]);\r\n        return (\r\n            <>\r\n                <div>\r\n                    <h1>motion winner: {winner} </h1>\r\n                </div>    \r\n            </>\r\n        )\r\n    \r\n}\r\n","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\Motion\\MotionPage.js",[],"C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionCreationPage\\BuildMotionCreationPage\\BuildMotionCreationPage.js",[],"C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionCreationPage\\BuildCheckoutPage\\BuildCheckoutPage.js",[],"C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\api\\api.js",["211","212"],"import db from \"./dummydb\";\r\nimport Axios, { axios } from \"axios\";\r\n\r\nlet currentUser = {\r\n  id: 4,\r\n  name: \"Tyler\",\r\n  password: \"password1\",\r\n  isAdmin: false,\r\n};\r\n\r\nexport async function hello() {\r\n  const result = await Axios.get(\"http://localhost:8081/hello\");\r\n  console.log(result);\r\n}\r\n\r\n//Users\r\nexport async function Login(username, password) {\r\n  for (let i = 0; i < db.users.length; i++) {\r\n    const u = db.users[i];\r\n    if (u.name === username && u.password === password) {\r\n      currentUser = u;\r\n      return;\r\n    }\r\n  }\r\n\r\n  throw new Error(\"User not found  or password incorrect\");\r\n}\r\n\r\nexport async function getUsers() {\r\n  const resp = await Axios.get(\"http://localhost:5000/users\", {\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n  });\r\n  return resp.data;\r\n}\r\n\r\nexport async function getUserByName(name) {\r\n  for (let i = 0; i < db.users.length; i++) {\r\n    const u = db.users[i];\r\n    if (u.name === name) {\r\n      return u;\r\n    }\r\n  }\r\n\r\n  throw new Error(\"User not found\");\r\n}\r\n\r\nexport async function getUserById(id) {\r\n  for (let i = 0; i < db.users.length; i++) {\r\n    const u = db.users[i];\r\n    if (u.id === id) {\r\n      return u;\r\n    }\r\n  }\r\n\r\n  throw new Error(\"User not found\");\r\n}\r\n\r\nexport async function addUser(userDTO) {\r\n  for (let i = 0; i < db.users.length; i++) {\r\n    const u = db.users[i];\r\n\r\n    if (u.name === userDTO.name) {\r\n      return new Error(\"User already exist\");\r\n    }\r\n  }\r\n\r\n  const userToAdd = {\r\n    ...userDTO,\r\n    id: ++db.lastUserID,\r\n    isAdmin: false,\r\n  };\r\n\r\n  db.users.push(userToAdd);\r\n  return userToAdd;\r\n}\r\n\r\n// addUser({name: 'georgia', password: 'ok'}).then(u => {\r\n//     console.log('added ' + JSON.stringify(u));\r\n//     console.log(JSON.stringify(db.users, null, 2));\r\n// });\r\n\r\n//Motions:\r\n// export async function getMotions() {\r\n//   if (!currentUser) {\r\n//     return [];\r\n//   }\r\n//   return db.motions.filter((m) => m.owner_id === currentUser.id);\r\n// }\r\n\r\nexport async function getMotions() {\r\n  const resp = await Axios.get(\"http://localhost:5000/motions\", {\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n  });\r\n  return resp.data;\r\n}\r\n//console.log(JSON.stringify(getMotions()));\r\n\r\nexport async function addMotion(motion) {\r\n  const resp = await Axios.post(\r\n    \"http://localhost:5000/motions\",\r\n    {\r\n      title: motion.title,\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    }\r\n  );\r\n  return resp.data;\r\n}\r\n\r\nexport async function addMotionUser(motion) {\r\n  const resp = await Axios.post(\r\n    \"http://localhost:5000/motionuser\",\r\n    {\r\n      motionId: motion.id,\r\n      userId: motion.userId,\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    }\r\n  );\r\n  return resp.data;\r\n}\r\n\r\nexport async function addMotionChoice(motion) {\r\n  const resp = await Axios.post(\r\n    \"http://localhost:5000/motionchoices\",\r\n    {\r\n      motionId: motion.id,\r\n      choiceId: motion.choiceId,\r\n    },\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      },\r\n    }\r\n  );\r\n  return resp.data;\r\n}\r\n\r\nexport async function getChoices() {\r\n  const resp = await Axios.get(\"http://localhost:5000/choices\", {\r\n    headers: {\r\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n    },\r\n  });\r\n  return resp.data;\r\n}\r\n\r\nexport async function getMotionChoices() {\r\n  return db.motionChoices;\r\n}\r\n\r\n// setTimeout(() => {\r\n//   addMotion({ title: \"hello\" }).then((m) => {\r\n//     console.log(JSON.stringify(db.motions, null, 2));\r\n//   });\r\n// }, 20000);\r\n\r\n// console.log('running axiossssssssss')\r\n// Axios.get('http://localhost:5000/hello' , {\r\n//   headers: {\r\n//     \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\r\n//   }\r\n// }).then(r => {\r\n//   console.log(r.data);\r\n// })\r\n\r\n// setInterval(() => {\r\n//   Axios.get('http://localhost:5000/choices' , {\r\n//   headers: {\r\n//     \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\r\n//   }\r\n// }).then(r => {\r\n//   console.log(r.data);\r\n// })\r\n// }, 5000)\r\n\r\nexport async function closeMotion() {}\r\n","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\components\\HomePageWelcome\\HomePageWelcome.js",[],"C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\components\\MultiSelector\\SelectedItems\\SelectedItems.js",[],"C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\components\\Drawer.js",["213"],"import React from \"react\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as IoIcons from \"react-icons/io\";\r\nimport * as GiIcons from \"react-icons/gi\";\r\n\r\nexport const DrawerData = [\r\n  {\r\n    title: \"Home\",\r\n    path: \"/\",\r\n    icon: <AiIcons.AiFillHome />,\r\n    cName: \"nav-text\",\r\n  },\r\n  // {\r\n  //     title: 'Login',\r\n  //     path: '/login',\r\n  //     icon: <IoIcons.IoIosLogIn />,\r\n  //     cName: 'nav-text'\r\n  // },\r\n  // {\r\n  //   title: \"Motion\",\r\n  //   path: \"/motion\",\r\n  //   icon: <GiIcons.GiPartyFlags />,\r\n  //   cName: \"nav-text\",\r\n  // },\r\n  // {\r\n  //   title: \"ReduxExample\",\r\n  //   path: \"/reduxTest\",\r\n  //   icon: <GiIcons.GiTestTubes />,\r\n  //   cName: \"nav-text\",\r\n  // },\r\n  {\r\n    title: \"MotionCreation\",\r\n    path: \"motion-creation\",\r\n    icon: <AiIcons.AiFillPlusCircle />,\r\n    cName: \"nav-text\",\r\n  },\r\n  // {\r\n  //   title: \"MotionVote\",\r\n  //   path: \"motion-vote\",\r\n  //   icon: <GiIcons.GiVote />,\r\n  //   cName: \"nav-text\",\r\n  // },\r\n  {\r\n    title: \"Logout\",\r\n    path: \"/login\",\r\n    icon: <IoIcons.IoIosLogOut />,\r\n    cName: \"nav-text logout\",\r\n  },\r\n];\r\n","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionVotingPage\\BuildVotePage\\BuildVotePage.js",["214","215","216","217","218","219"],"import React, { useState, useEffect } from \"react\";\r\nimport MultiVotingSelector from \"../../../components/MultiSelector/MultiVotingSelector.js\";\r\nimport axios from \"axios\";\r\nimport { CustomDialog } from \"react-st-modal\";\r\nimport MakeSuggestionsDialog from \"./MakeSuggestionsDialog\";\r\nimport { IoMdSend } from \"react-icons/io\";\r\nimport { IconContext } from \"react-icons/lib\";\r\n\r\nexport default function BuildVotePage(props) {\r\n  console.log(\"motionID: \", props.motionID);\r\n  const [choices, setChoices] = useState([]);\r\n  const [selectedRestaurants, setSelectedRestaurants] = useState([]);\r\n  const [selectedRestaurantIDs, setSelectedRestaurantIDs] = useState([]);\r\n  const [selectedSuggestion, setSelectedSuggestion] = useState([]);\r\n  const [sending, setSending] = useState(false);\r\n  const [sentOnce, setSentOnce] = useState(false);\r\n  const [action, setAction] = useState(1);\r\n\r\n  useEffect(async (e) => {\r\n    const result = await axios\r\n      .get(\"http://localhost:5000/choices\", {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n      })\r\n      .then((res) => {\r\n        setChoices(res.data);\r\n      });\r\n  }, []);\r\n  console.log(choices);\r\n\r\n  function handleVote(selectedItems) {\r\n    setSelectedRestaurants(selectedItems);\r\n    setSelectedRestaurantIDs(selectedItems.map((el) => el.id));\r\n  }\r\n\r\n  switch (action) {\r\n    case 1:\r\n      return (\r\n        <div className=\"motion-creation-page\">\r\n          {props.type === \"Vote\" && <h1>Let's Vote</h1>}\r\n          <div className=\"VotePage-view\">\r\n            <MultiVotingSelector\r\n              type={props.type}\r\n              items={props.motionChoices}\r\n              selectedItems={selectedRestaurants}\r\n              selectedItemIDs={selectedRestaurantIDs}\r\n              setSelectedItems={(newSelected) => handleVote(newSelected)}\r\n              limit={1}\r\n            />\r\n            <div className=\"confirm-vote-view\">\r\n              {sending && <div>sending</div>}\r\n              {!sending && sentOnce && <div>sent</div>}\r\n              <button\r\n                disabled={selectedRestaurantIDs.length !== 1}\r\n                className=\"submit-vote-button\"\r\n                onClick={async () => {\r\n                  setSending(true);\r\n                  console.log(props.motionID);\r\n                  console.log(selectedRestaurantIDs[0]);\r\n                  await axios\r\n                    .put(\r\n                      \"http://localhost:5000/motionuser\",\r\n                      {\r\n                        motionId: props.motionID,\r\n                        voteid: selectedRestaurants[0].choice.id,\r\n                      },\r\n                      {\r\n                        headers: {\r\n                          Authorization: `Bearer ${localStorage.getItem(\r\n                            \"token\"\r\n                          )}`,\r\n                        },\r\n                      }\r\n                    )\r\n                    .then((el) => {\r\n                      setSentOnce(true);\r\n                      setSending(false);\r\n                    })\r\n                    .catch((el) => {\r\n                      setSentOnce(true);\r\n                      setSending(false);\r\n                    });\r\n                }}\r\n              >\r\n                <IconContext.Provider\r\n                  value={{\r\n                    size: \"30px\",\r\n                  }}\r\n                >\r\n                  <IoMdSend />\r\n                </IconContext.Provider>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <button\r\n            className=\"makeSuggestionBtn\"\r\n            onClick={async () => {\r\n              await CustomDialog(\r\n                <MakeSuggestionsDialog\r\n                  motionID={props.motionID}\r\n                  type=\"Suggestion\"\r\n                  choices={choices}\r\n                />,\r\n                {\r\n                  title: \"Custom Dialog\",\r\n                  isCanClose: true,\r\n                  showCloseIcon: true,\r\n                }\r\n              );\r\n            }}\r\n          >\r\n            Make a suggestion\r\n          </button>\r\n        </div>\r\n      );\r\n    // case 2:\r\n    //   return (\r\n    //       <BuildSuggestionPage\r\n    //             type=\"Suggestion\"\r\n    //             items={choices}\r\n    //             selectedItems = {selectedSuggestion}\r\n    //             setSelectedItems = {setSelectedSuggestion}\r\n    //             motionID = {props.motionID}\r\n    //             handleClick={handleClick}\r\n    //         />\r\n    //   )\r\n    // case 3:\r\n    //   return (\r\n    //       <BuildFinalVotePage\r\n    //             type=\"Vote-Page\"\r\n    //             items={props.items}\r\n    //             selectedItems={selectedRestaurants}\r\n    //             setSelectedItems={(newSelected) =>\r\n    //             setSelectedRestaurants(newSelected)\r\n    //           }\r\n    //             handleClick={handleClick}\r\n    //       />\r\n    //   )\r\n    // case 4:\r\n    //   return (\r\n    //     <BuildMotionWinnerPage />\r\n    //   )\r\n  }\r\n}\r\n","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionVotingPage\\BuildVotePage\\BuildOwnerVotePage.js",["220","221","222","223","224","225","226","227","228","229"],"import React, { useState, useEffect } from \"react\";\r\nimport MultiVotingSelector from \"../../../components/MultiSelector/MultiVotingSelector.js\";\r\nimport { getChoices } from \"../../../api/api\";\r\nimport BuildOwnerSuggestionPage from \"../BuildSuggestionPage/BuildOwnerSuggestionPage\";\r\nimport BuildMotionWinnerPage from \"../BuildMotionWinnerPage/BuildMotionWinnerPage\";\r\nimport BuildFinalVotePage from \"../BuildFinalVotePage/BuildFinalVotePage\";\r\nimport axios from \"axios\";\r\nimport SuggestionsDialog from \"./SuggestionsDialog\";\r\nimport { CustomDialog } from \"react-st-modal\";\r\nimport { IoMdSend } from \"react-icons/io\";\r\nimport { IconContext } from \"react-icons/lib\";\r\n\r\nexport default function BuildOwnerVotePage(props) {\r\n  console.log(localStorage.getItem(\"token\"));\r\n  console.log(\"VotingOwnerPage props:\");\r\n  console.log(props);\r\n  const [ownerSuggestion, setOwnerSuggestion] = useState([]);\r\n  const [selectedRestaurants, setSelectedRestaurants] = useState([]);\r\n  const [selectedRestaurantIDs, setSelectedRestaurantIDs] = useState([]);\r\n  const [move, setMove] = useState(1);\r\n  const [confirmedVote, setConfirmedVote] = useState(\"\");\r\n  const [sending, setSending] = useState(false);\r\n  const [sentOnce, setSentOnce] = useState(false);\r\n\r\n  useEffect(async (e) => {\r\n    const result = await axios\r\n      .get(\"http://localhost:5000/suggestions\", {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n      })\r\n      .then((res) => {\r\n        setOwnerSuggestion(res.data);\r\n      });\r\n  }, []);\r\n\r\n  function handleVote(selectedItems) {\r\n    setSelectedRestaurants(selectedItems);\r\n    setSelectedRestaurantIDs(selectedItems.map((el) => el.id));\r\n  }\r\n\r\n  function handleUserSuggestion() {\r\n    // setMove(move + 1);\r\n  }\r\n  function handleClick() {\r\n    setMove(move + 1);\r\n  }\r\n  function setOnaSuggestions(newList) {\r\n    console.log(newList);\r\n    setOwnerSuggestion(newList);\r\n  }\r\n\r\n  async function handleClose() {\r\n    console.log(props.motionID);\r\n    const res = await axios.put(\r\n      `http://localhost:5000/motions/${props.motionID}`,\r\n      null,\r\n      {\r\n        headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n      }\r\n    );\r\n    console.log(res);\r\n  }\r\n\r\n  switch (move) {\r\n    case 1:\r\n      return (\r\n        <div className=\"motion-creation-page\">\r\n          {props.type === \"Vote\" && <h1>Let's Vote</h1>}\r\n          <div className=\"VotePage-view\">\r\n            <MultiVotingSelector\r\n              type={props.type}\r\n              items={props.motionChoices}\r\n              selectedItems={selectedRestaurants}\r\n              selectedItemIDs={selectedRestaurantIDs}\r\n              setSelectedItems={(newSelected) => handleVote(newSelected)}\r\n              limit={1}\r\n            />\r\n            <div className=\"confirm-vote-view\">\r\n              {sending && <div>sending</div>}\r\n              {!sending && sentOnce && <div>sent</div>}\r\n              <button\r\n                disabled={selectedRestaurantIDs.length !== 1}\r\n                className=\"submit-vote-button\"\r\n                onClick={async () => {\r\n                  setSending(true);\r\n                  console.log(props.motionID);\r\n                  console.log(selectedRestaurantIDs[0]);\r\n                  await axios\r\n                    .put(\r\n                      \"http://localhost:5000/motionuser\",\r\n                      {\r\n                        motionId: props.motionID,\r\n                        voteid: selectedRestaurants[0].choice.id,\r\n                      },\r\n                      {\r\n                        headers: {\r\n                          Authorization: `Bearer ${localStorage.getItem(\r\n                            \"token\"\r\n                          )}`,\r\n                        },\r\n                      }\r\n                    )\r\n                    .then((el) => {\r\n                      setSentOnce(true);\r\n                      setSending(false);\r\n                    })\r\n                    .catch((el) => {\r\n                      setSentOnce(true);\r\n                      setSending(false);\r\n                    });\r\n                }}\r\n              >\r\n                <IconContext.Provider\r\n                  value={{\r\n                    size: \"30px\",\r\n                  }}\r\n                >\r\n                  <IoMdSend />\r\n                </IconContext.Provider>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <button\r\n            className=\"makeSuggestionBtn\"\r\n            onClick={async () => {\r\n              await CustomDialog(\r\n                <SuggestionsDialog\r\n                  type=\"Owner_Suggestion\"\r\n                  items={ownerSuggestion}\r\n                  handleUserSuggestion={handleUserSuggestion}\r\n                  setOnaSuggestions={(newList) => setOnaSuggestions(newList)}\r\n                />,\r\n                {\r\n                  title: \"Custom Dialog\",\r\n                  isCanClose: true,\r\n                  showCloseIcon: true,\r\n                }\r\n              );\r\n            }}\r\n          >\r\n            You have {ownerSuggestion.length} suggestions\r\n          </button>\r\n          <button\r\n            className=\"skipSuggestionBtn\"\r\n            onClick={async () => await handleClose()}\r\n          >\r\n            Close Motion\r\n          </button>\r\n        </div>\r\n      );\r\n    // case 2:\r\n    //   return (\r\n    //     <BuildOwnerSuggestionPage\r\n    //       type=\"Owner_Suggestion\"\r\n    //       items={ownerSuggestion}\r\n    //       handleUserSuggestion={handleUserSuggestion}\r\n    //       triggerDelete={triggerDelete}\r\n    //     />\r\n    //   );\r\n    // case 3:\r\n    //   return (\r\n    //     <BuildFinalVotePage\r\n    //       type=\"Vote-Page\"\r\n    //       items={props.items}\r\n    //       selectedItems={selectedRestaurants}\r\n    //       setSelectedItems={(newSelected) =>\r\n    //         setSelectedRestaurants(newSelected)\r\n    //       }\r\n    //       handleClick={handleClick}\r\n    //     />\r\n    //   );\r\n    // case 4:\r\n    //   return <BuildMotionWinnerPage />;\r\n  }\r\n}\r\n","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\components\\MultiSelector\\MultiSelector.js",["230"],"import React, { useState } from \"react\";\r\nimport \"./MultiSelector.css\";\r\nimport { GoCheck } from \"react-icons/go\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nexport default function MultiSelector(props) {\r\n  //console.log(props.selectedItems);\r\n  //console.log(props.items);\r\n  return (\r\n    <div className=\"multi-selector\">\r\n      {props.items !== undefined &&\r\n        props.items.map((el, index) =>\r\n          BuildItem(\r\n            props.type,\r\n            index,\r\n            el,\r\n            props.selectedItems,\r\n            props.selectedItemIDs,\r\n            props.setSelectedItems,\r\n            props.limit\r\n          )\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction BuildItem(\r\n  type,\r\n  index,\r\n  item,\r\n  selectedItems,\r\n  selectedItemIDs,\r\n  setSelectedItems,\r\n  limit\r\n) {\r\n  return (\r\n    // div is big because it has lots of conditional onclick-functionality\r\n    <div\r\n      className=\"selection-item\"\r\n      key={index}\r\n      onClick={\r\n        selectedItems.length === limit\r\n          ? () => {\r\n              // if 4 choices have already been selected AND\r\n              // if the current item being clicked is being \"unselected\"\r\n              // unselect item from list\r\n              if (selectedItemIDs.includes(item.id)) {\r\n                setSelectedItems(selectedItems.filter((i) => i.id !== item.id));\r\n              }\r\n            }\r\n          : () => {\r\n              if (selectedItemIDs.includes(item.id)) {\r\n                setSelectedItems(selectedItems.filter((i) => i.id !== item.id));\r\n              } else {\r\n                setSelectedItems([...selectedItems, item]);\r\n              }\r\n            }\r\n      }\r\n    >\r\n      {/* Conditionally rendered checkmark */}\r\n      {selectedItemIDs.includes(item.id) && (\r\n        <div className=\"checked-item\">\r\n          <IconContext.Provider\r\n            value={{\r\n              size: \"50px\",\r\n            }}\r\n          >\r\n            <GoCheck />\r\n          </IconContext.Provider>\r\n        </div>\r\n      )}\r\n      {/* // TODO image + words */}\r\n      {type === \"Restaurants\" && <div>{item.name}</div>}\r\n      {type === \"Friends\" && <div>{item.name}</div>}\r\n\r\n      {/* <RestaurantItem /> <PersonItem />*/}\r\n      {/* <div>{index} Yo MAMA</div> */}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\components\\MultiSelector\\MultiVotingSelector.js",["231"],"import React, { useState } from \"react\";\r\nimport \"./MultiSelector.css\";\r\nimport { GoCheck } from \"react-icons/go\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nexport default function MultiVotingSelector(props) {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"multi-selector\">\r\n      {props.items.map((el, index) =>\r\n        BuildItem(\r\n          props.type,\r\n          index,\r\n          el,\r\n          props.selectedItems,\r\n          props.selectedItemIDs,\r\n          props.setSelectedItems,\r\n          props.limit\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction BuildItem(\r\n  type,\r\n  index,\r\n  item,\r\n  selectedItems,\r\n  selectedItemIDs,\r\n  setSelectedItems,\r\n  limit\r\n) {\r\n  return (\r\n    // div is big because it has lots of conditional onclick-functionality\r\n    <div\r\n      className=\"selection-item\"\r\n      key={index}\r\n      onClick={\r\n        selectedItems.length === limit\r\n          ? () => {\r\n              // if {limit} choices have already been selected AND\r\n              // if the current item being clicked is being \"unselected\"\r\n              // unselect item from list\r\n              if (selectedItemIDs.includes(item.id)) {\r\n                setSelectedItems(selectedItems.filter((i) => i.id !== item.id));\r\n              } else {\r\n                console.log(item);\r\n                console.log(item.id);\r\n                selectedItems.map((e) => console.log(e.id));\r\n                console.log(selectedItems.includes(146));\r\n              }\r\n            }\r\n          : () => {\r\n              if (selectedItemIDs.includes(item.id)) {\r\n                console.log(\"remove\");\r\n                setSelectedItems(selectedItems.filter((i) => i.id !== item.id));\r\n              } else {\r\n                console.log(\"adds\");\r\n                setSelectedItems([...selectedItems, item]);\r\n              }\r\n            }\r\n      }\r\n    >\r\n      {/* Conditionally rendered checkmark */}\r\n      {selectedItemIDs.includes(item.id) && (\r\n        <div className=\"checked-item\">\r\n          <IconContext.Provider\r\n            value={{\r\n              size: \"50px\",\r\n            }}\r\n          >\r\n            <GoCheck />\r\n          </IconContext.Provider>\r\n        </div>\r\n      )}\r\n      {/* // TODO image + words */}\r\n      {type === \"Restaurants\" && <div>{item.name}</div>}\r\n      {type === \"Friends\" && <div>build Persons</div>}\r\n      {type === \"Vote\" && <div>{item.choice.name}</div>}\r\n      {type === \"Suggestion\" && <div>{item.name}</div>}\r\n      {type === \"Owner_Suggestion\" && <div>{item.choice_id.name}</div>}\r\n      {type === \"Vote-Page\" && <div>{item.choice.name}</div>}\r\n      {/* <RestaurantItem /> <PersonItem />*/}\r\n      {/* <div>{index} Yo MAMA</div> */}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionCreationPage\\BuildCheckoutPage\\CustomDialogContent.js",["232","233","234","235","236","237"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDialog } from \"react-st-modal\";\r\nimport UseAnimations from \"react-useanimations\";\r\nimport loading from \"react-useanimations/lib/loading\";\r\nimport {\r\n  addMotion,\r\n  addMotionChoice,\r\n  addMotionUser,\r\n  getChoices,\r\n  getUsers,\r\n  hello,\r\n} from \"../../../api/api\";\r\nimport \"./BuildCheckoutPage.css\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { IoMdCheckmarkCircleOutline } from \"react-icons/io\";\r\n\r\nexport default function CustomDialogContent(props) {\r\n  const [completed, setCompleted] = useState(false);\r\n  // TO BE ASYNC\r\n  async function handleApiCall() {\r\n    await addMotion({ title: props.title })\r\n      .then(async (res) => {\r\n        console.log(\"res2\");\r\n        for (const choice of props.selectedChoices) {\r\n          console.log(res.id);\r\n          console.log(choice.id);\r\n          const addedChoice = await addMotionChoice({\r\n            id: res.id,\r\n            choiceId: choice.id,\r\n          });\r\n          console.log(addedChoice);\r\n        }\r\n        return res.id;\r\n      })\r\n      .then(async (res) => {\r\n        console.log(\"res11\");\r\n        console.log(res);\r\n        const addMe = await addMotionUser({\r\n          id: res,\r\n          userId: localStorage.getItem(\"id\"),\r\n        });\r\n        for (const user of props.selectedFriends) {\r\n          const addedUser = await addMotionUser({\r\n            id: res,\r\n            userId: user.id,\r\n          });\r\n          console.log(addedUser);\r\n        }\r\n\r\n        // return resp;\r\n      })\r\n      .then((res) => {\r\n        console.log(\"res3\");\r\n        console.log(res);\r\n        setCompleted(true);\r\n      });\r\n    // .catch((err) => {\r\n    //   alert(err);\r\n    // });\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleApiCall();\r\n  }, []);\r\n\r\n  const dialog = useDialog();\r\n  return (\r\n    <div className=\"custom-dialog-content\">\r\n      {buildApiCalls(completed)}\r\n      <button\r\n        onClick={() => {\r\n          // Сlose the dialog and return the value\r\n          dialog.close(true);\r\n        }}\r\n      >\r\n        cancel API call?\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction buildApiCalls(completed) {\r\n  return (\r\n    <div className=\"api-validation\">\r\n      {!completed && <UseAnimations animation={loading} />}\r\n      {completed && (\r\n        <IconContext.Provider value={{ size: \"30px\" }}>\r\n          <IoMdCheckmarkCircleOutline></IoMdCheckmarkCircleOutline>\r\n        </IconContext.Provider>\r\n      )}\r\n      <p>Create Motion, Add Choices, Add Friends</p>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\api\\dummydb.js",["238"],"export default {\r\n  users: [\r\n    {\r\n      id: 1,\r\n      name: \"Macy\",\r\n      password: \"password1\",\r\n      isAdmin: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"John Doe\",\r\n      password: \"password2\",\r\n      isAdmin: false,\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Fella\",\r\n      password: \"password3\",\r\n      isAdmin: false,\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Tyler\",\r\n      password: \"password1\",\r\n      isAdmin: false,\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Eric\",\r\n      password: \"password2\",\r\n      isAdmin: false,\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Tian\",\r\n      password: \"password3\",\r\n      isAdmin: false,\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"Karl\",\r\n      password: \"password3\",\r\n      isAdmin: false,\r\n    },\r\n  ],\r\n  lastUserID: 3,\r\n\r\n  motions: [\r\n    {\r\n      id: 1,\r\n      title: \"motion1\",\r\n      owner_id: 1,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"motion2\",\r\n      owner_id: 1,\r\n    },\r\n  ],\r\n  lastMotionID: 2,\r\n\r\n  choices: [\r\n    {\r\n      id: 9,\r\n      name: \"Panda Express\",\r\n      owner_id: 2,\r\n    },\r\n    {\r\n      id: 10,\r\n      name: \"Dairy Queen\",\r\n      owner_id: 2,\r\n    },\r\n    {\r\n      id: 11,\r\n      name: \"Olive Garden\",\r\n      owner_id: 3,\r\n    },\r\n    {\r\n      id: 13,\r\n      name: \"Chic-fil-a\",\r\n      owner_id: 6,\r\n    },\r\n    {\r\n      id: 14,\r\n      name: \"Burger King\",\r\n      owner_id: 2,\r\n    },\r\n    {\r\n      id: 15,\r\n      name: \"McDonalds\",\r\n      owner_id: 2,\r\n    },\r\n    {\r\n      id: 16,\r\n      name: \"Jimmy Johns\",\r\n      owner_id: 3,\r\n    },\r\n    {\r\n      id: 17,\r\n      name: \"PizzaHut\",\r\n      owner_id: 6,\r\n    },\r\n  ],\r\n  motionChoices: [\r\n    {\r\n      id: 9,\r\n      name: \"Panda Express\",\r\n      owner_id: 2,\r\n    },\r\n    {\r\n      id: 10,\r\n      name: \"Dairy Queen\",\r\n      owner_id: 2,\r\n    },\r\n    {\r\n      id: 11,\r\n      name: \"Olive Garden\",\r\n      owner_id: 3,\r\n    },\r\n    {\r\n      id: 13,\r\n      name: \"Chic-fil-a\",\r\n      owner_id: 6,\r\n    },\r\n  ],\r\n\r\n  motion_user: [\r\n    {\r\n      motion_user_id: 1,\r\n      motion_id: 1,\r\n      user_id: 3,\r\n      vote_id: 4,\r\n    },\r\n    {\r\n      motion_user_id: 2,\r\n      motion_id: 1,\r\n      user_id: 1,\r\n      vote_id: 4,\r\n    },\r\n    {\r\n      motion_user_id: 3,\r\n      motion_id: 1,\r\n      user_id: 2,\r\n      vote_id: 4,\r\n    },\r\n    {\r\n      motion_user_id: 4,\r\n      motion_id: 1,\r\n      user_id: 4,\r\n      vote_id: 4,\r\n    },\r\n  ],\r\n  lastMotionUserID: 4,\r\n\r\n  motion_choice: [\r\n    { motion_choice_id: 1, motion_id: 1, choice_id: 2 },\r\n    { motion_choice_id: 2, motion_id: 1, choice_id: 4 },\r\n    { motion_choice_id: 3, motion_id: 1, choice_id: 6 },\r\n    { motion_choice_id: 4, motion_id: 1, choice_id: 8 },\r\n  ],\r\n  lastMotionChoiceID: 4,\r\n};\r\n","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\components\\HomePageWelcome\\WelcomeTitle\\WelcomeTitle.js",["239"],"import React, { useState } from \"react\";\r\nimport \"./WelcomeTitle.css\";\r\n\r\nexport default function WelcomeTitle() {\r\n  const [state, setState] = useState({ userMotions: [] });\r\n  const user = state.userMotions.length === 0 ? \"Tyler\" : \"Tian\";\r\n  return (\r\n    <div className=\"title\">\r\n      {state.userMotions.length === 0\r\n        ? \"Start a Motion!\"\r\n        : `Join ${user}'s motion`}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionVotingPage\\BuildMotionWinnerPage\\BuildMotionWinnerPage.js",[],"C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\components\\HomePageWelcome\\WelcomeMessage\\WelcomeMessage.js",["240"],"import React, { useState } from \"react\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { IconContext } from \"react-icons\";\r\nimport \"./WelcomeMessage.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function WelcomeMessage() {\r\n\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"welcome-message\">\r\n      <p className=\"message\">Let’s figure out where to eat!</p>\r\n      <button\r\n        className=\"welcome-message-button\"\r\n        onClick={() => history.push('/motion-creation')}\r\n        >\r\n        <IconContext.Provider\r\n          value={{\r\n            size: \"35px\",\r\n          }}\r\n        >\r\n          <FaPlus />\r\n        </IconContext.Provider>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionVotingPage\\BuildSuggestionPage\\BuildOwnerSuggestionPage.js",["241","242","243","244"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./BuildOwnerSuggestionPage.css\";\r\nimport { FaLongArrowAltRight } from \"react-icons/fa\";\r\nimport { IconContext } from \"react-icons\";\r\nimport SelectedVotingItems from \"../../../components/MultiSelector/SelectedItems/SelectedVotingItems\";\r\nimport axios from \"axios\";\r\n\r\nexport default function BuildOwnerSuggestionPage(props) {\r\n  const [suggestion, setSuggestion] = useState([]);\r\n  console.log(props.items);\r\n  const suggestionsName = props.items.map((a) => a.choice_id.name);\r\n  console.log(\"Owner_Suggestion: \", suggestionsName);\r\n  return (\r\n    <div>\r\n      <div className=\"Suggestion-window\">\r\n        <SelectedVotingItems\r\n          type=\"Suggestion\"\r\n          selectedItems={props.items}\r\n          triggerDelete={props.triggerDelete}\r\n        />\r\n      </div>\r\n      <button\r\n        className=\"move-on-button move-on\"\r\n        // disabled={selectedRestaurants.length !== 4}\r\n        onClick={() => props.handleUserSuggestion()}\r\n      >\r\n        <IconContext.Provider value={{ size: \"30px\" }}>\r\n          <FaLongArrowAltRight />\r\n        </IconContext.Provider>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionVotingPage\\BuildSuggestionPage\\BuildSuggestionPage.js",["245","246","247","248","249","250"],"C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionVotingPage\\BuildFinalVotePage\\BuildFinalVotePage.js",["251","252","253","254","255"],"import { React, useState } from \"react\";\r\nimport { FaLongArrowAltRight } from \"react-icons/fa\";\r\nimport { IconContext } from \"react-icons\";\r\nimport MultiVotingSelector from \"../../../components/MultiSelector/MultiVotingSelector\";\r\nimport axios from \"axios\";\r\nexport default function BuildFinalVotePage(props) {\r\n  console.log(props.selectedItems);\r\n  // console.log(props.selectedItems.length === 4);\r\n  const [selectedSuggestion, setSelectedSuggestion] = useState([]);\r\n  console.log(props.items);\r\n  console.log(props.selectedItems);\r\n  const motionID = props.items.map((a) => a.motion.id)[0];\r\n  console.log(\"motionID: \", motionID);\r\n  const motionOwnerID = props.items.map((a) => a.motion.owner_id.id)[0];\r\n  console.log(\"motionOwnerID: \", motionOwnerID);\r\n\r\n  const motionStatus = props.items.map((a) => a.motion.status)[0];\r\n  console.log(\"motionStatus: \", motionStatus);\r\n\r\n  const userId = localStorage.getItem(\"id\");\r\n  console.log(\"userID: \", localStorage.getItem(\"id\"));\r\n  return (\r\n    <div className=\"motion-creation-page\">\r\n      {props.type === \"Vote\" && <h1>Let's Vote</h1>}\r\n      <div className=\"VotePage-view\">\r\n        <MultiVotingSelector\r\n          type={props.type}\r\n          items={props.items}\r\n          selectedItems={props.selectedItems}\r\n          setSelectedItems={(newSelected) =>\r\n            props.setSelectedItems(newSelected)\r\n          }\r\n        />\r\n\r\n        <button\r\n          className={\r\n            props.selectedItems.length == 1 && props.type === \"Vote-Page\"\r\n              ? \"move-on-button move-on\"\r\n              : \"move-on-button\"\r\n          }\r\n          // disabled={selectedRestaurants.length !== 4}\r\n          onClick={async () => {\r\n            motionOwnerID == userId\r\n              ? await axios.put(`http://localhost:5000/motions/${motionID}`, {\r\n                  headers: {\r\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    \"Access-Control-Allow-Methods\":\r\n                      \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n                  },\r\n                })\r\n              : await axios.put(\r\n                  \"http://localhost:5000/motionuser\",\r\n                  { motionId: motionID, userId: userId },\r\n                  {\r\n                    headers: {\r\n                      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                      \"Access-Control-Allow-Origin\": \"*\",\r\n                      \"Access-Control-Allow-Methods\":\r\n                        \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n                    },\r\n                  }\r\n                );\r\n            if (motionStatus) {\r\n              props.handleClick();\r\n            }\r\n          }}\r\n        >\r\n          <IconContext.Provider value={{ size: \"30px\" }}>\r\n            <FaLongArrowAltRight />\r\n          </IconContext.Provider>\r\n        </button>\r\n      </div>\r\n      {motionOwnerID == userId ? (\r\n        <button\r\n          className=\"skipSuggestionBtn\"\r\n          onClick={() =>\r\n            axios.put(`http://localhost:5000/motions/${motionID}`, {\r\n              headers: {\r\n                Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Access-Control-Allow-Methods\":\r\n                  \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n              },\r\n            })\r\n          }\r\n        >\r\n          Close Motion\r\n        </button>\r\n      ) : null}\r\n      ;\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\components\\MultiSelector\\SelectedItems\\SelectedVotingItems.js",["256","257"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./SelectedItems.css\";\r\n\r\nimport BuildVotingItem from \"./BuildVotingItem\";\r\nexport default function SelectedVotingItems(props) {\r\n  // console.log(\"SelectedVotingItems props: \");\r\n  // console.log(props);\r\n\r\n  return (\r\n    <div className=\"selected-items\">\r\n      <p>{props.type !== undefined && `Selected ${props.type}`}</p>\r\n      {props.selectedItems.map((el, index) => (\r\n        <BuildVotingItem\r\n          key={index}\r\n          el={el}\r\n          index={index}\r\n          removeSuggestion={(id) => props.removeSuggestion(id)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\HomePage\\HomePageMotions.js",["258"],"import { React } from \"react\";\r\nimport HomePage from \"./HomePage\";\r\n\r\nexport default function HomePageMotions(props) {\r\n  console.log(props);\r\n\r\n  return (\r\n    <div className=\"home-page-motions\">\r\n      {props.motions.map((i, t) => {\r\n        return (\r\n          <div\r\n            className={\r\n              i.status\r\n                ? \"home-motion-tile closed-motion-tile\"\r\n                : \"home-motion-tile \"\r\n            }\r\n            key={t}\r\n            onClick={() => props.handleClick(i.id)}\r\n          >\r\n            <div className=\"motion-tile-text\">\r\n              <h3>{i.title}</h3>\r\n              <div className=\"invited-by\">\r\n                <span style={{ color: \"rgb(0, 0, 0, 0.5)\" }}>\r\n                  <em>Invited by</em>\r\n                </span>{\" \"}\r\n                {i.owner_id.name}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionVotingPage\\BuildVotePage\\SuggestionsDialog.js",["259","260","261","262"],"import React, { useState } from \"react\";\r\nimport { useDialog } from \"react-st-modal\";\r\nimport BuildOwnerSuggestionPage from \"./../BuildSuggestionPage/BuildOwnerSuggestionPage\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { FaLongArrowAltRight } from \"react-icons/fa\";\r\nimport SelectedVotingItems from \"./../../../components/MultiSelector/SelectedItems/SelectedVotingItems\";\r\n\r\nexport default function SuggestionsDialog(props) {\r\n  // console.log(\"Suggestion Dialog Props: \");\r\n  // console.log(props);\r\n  const dialog = useDialog();\r\n  // need this state for dialog, props cannot be rerendered\r\n  // in dialog unless reopened\r\n  const [localSuggestions, setLocalSuggestions] = useState(props.items);\r\n  return (\r\n    <div>\r\n      <div className=\"Suggestion-window\">\r\n        <SelectedVotingItems\r\n          type=\"Suggestion\"\r\n          selectedItems={localSuggestions}\r\n          removeSuggestion={(id) => {\r\n            const newSuggs = localSuggestions.filter(\r\n              (el) => el.suggestionId !== id\r\n            );\r\n            // Janky solution. Take some time to study someday\r\n            setLocalSuggestions(newSuggs);\r\n            props.setOnaSuggestions(newSuggs);\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionVotingPage\\BuildVotePage\\MakeSuggestionsDialog.js",["263","264"],"import React, { useState } from \"react\";\r\nimport MultiVotingSelector from \"./../../../components/MultiSelector/MultiVotingSelector\";\r\nimport Axios from \"axios\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { FaLongArrowAltRight } from \"react-icons/fa\";\r\n\r\nexport default function MakeSuggestionsDialog(props) {\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [selectedItemIDs, setSelectedItemIDs] = useState([]);\r\n  const [sending, setSending] = useState(false);\r\n  const [sentOnce, setSentOnce] = useState(false);\r\n\r\n  function handleVote(selectedItems) {\r\n    setSelectedItems(selectedItems);\r\n    setSelectedItemIDs(selectedItems.map((el) => el.id));\r\n  }\r\n\r\n  console.log(props);\r\n  console.log(selectedItems.length === 1 ? selectedItems[0].id : \"none\");\r\n  const choiceId = 19;\r\n  return (\r\n    <div className=\"motion-creation-page\">\r\n      <div className=\"VotePage-view\">\r\n        <MultiVotingSelector\r\n          type={props.type}\r\n          items={props.choices}\r\n          selectedItems={selectedItems}\r\n          selectedItemIDs={selectedItemIDs}\r\n          setSelectedItems={(newSelected) => handleVote(newSelected)}\r\n          limit={1}\r\n        />\r\n        <div className=\"confirm-vote-view\">\r\n          {sending && <div>sending</div>}\r\n          {!sending && sentOnce && <div>sent</div>}\r\n          <button\r\n            className={\r\n              selectedItems.length == 1 && props.type === \"Suggestion\"\r\n                ? \"move-on-button move-on\"\r\n                : \"move-on-button\"\r\n            }\r\n            // disabled={selectedRestaurants.length !== 4}\r\n            // onClick={() => props.handleClick(props.type, props.selectedItems)}\r\n            onClick={async () => {\r\n              setSending(true);\r\n              const result = await Axios.post(\r\n                \"http://localhost:5000/suggestions\",\r\n                { motionId: props.motionID, choiceId: selectedItems[0].id },\r\n                {\r\n                  headers: {\r\n                    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                    \"Access-Control-Allow-Origin\": \"*\",\r\n                    \"Access-Control-Allow-Methods\":\r\n                      \"GET,PUT,POST,DELETE,PATCH,OPTIONS\",\r\n                  },\r\n                }\r\n              )\r\n                .then((res) => {\r\n                  setSending(false);\r\n                  setSentOnce(true);\r\n                })\r\n                .catch((e) => {\r\n                  setSending(false);\r\n                  console.log(e);\r\n                });\r\n              console.log(result);\r\n            }}\r\n          >\r\n            <IconContext.Provider value={{ size: \"30px\" }}>\r\n              <FaLongArrowAltRight />\r\n            </IconContext.Provider>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\components\\MultiSelector\\SelectedItems\\BuildVotingItem.js",[],"C:\\Users\\tyler\\AndroidStudioProjects\\Revature\\FoodConsensus\\Team7ProjectRepo\\src\\pages\\MotionWinnerPage\\MotionWinnerPage.js",["265","266","267"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./MotionWinnerPage.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport UseAnimations from \"react-useanimations\";\r\nimport loading from \"react-useanimations/lib/loading\";\r\n\r\nexport default function MotionWinnerPage(props) {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [winner, setWinner] = useState([]);\r\n  const [complete, setComplete] = useState(false);\r\n\r\n  useEffect(async () => {\r\n    if (props.location.state === undefined || props.location.state === null) {\r\n      setRedirect(true);\r\n    } else {\r\n      console.log(localStorage.getItem(\"token\"));\r\n      // props.location.state.motionId\r\n      const resp = await Axios.get(\r\n        `http://localhost:5000/motions/${props.location.state.motionId}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      setWinner(resp.data.winner.name);\r\n      setComplete(true);\r\n    }\r\n  }, []);\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  switch (complete) {\r\n    case true:\r\n      return (\r\n        <div className=\"motion-winner-page\">\r\n          <h1>And the winner is...</h1>\r\n          <div className=\"winning-choice\">\r\n            <h1>{winner}</h1>\r\n          </div>\r\n        </div>\r\n      );\r\n    case false:\r\n      return (\r\n        <div className=\"home-page\">\r\n          <UseAnimations animation={loading} size={70} />\r\n        </div>\r\n      );\r\n  }\r\n}\r\n",{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","replacedBy":"271"},{"ruleId":"272","severity":1,"message":"273","line":7,"column":3,"nodeType":"274","messageId":"275","endLine":7,"endColumn":14},{"ruleId":"276","severity":1,"message":"277","line":6,"column":5,"nodeType":"278","messageId":"279","endLine":9,"endColumn":6},{"ruleId":"280","severity":1,"message":"281","line":80,"column":33,"nodeType":"282","messageId":"283","endLine":80,"endColumn":35},{"ruleId":"272","severity":1,"message":"284","line":3,"column":8,"nodeType":"274","messageId":"275","endLine":3,"endColumn":21},{"ruleId":"272","severity":1,"message":"285","line":4,"column":10,"nodeType":"274","messageId":"275","endLine":4,"endColumn":21},{"ruleId":"272","severity":1,"message":"286","line":5,"column":10,"nodeType":"274","messageId":"275","endLine":5,"endColumn":21},{"ruleId":"272","severity":1,"message":"287","line":6,"column":10,"nodeType":"274","messageId":"275","endLine":6,"endColumn":22},{"ruleId":"272","severity":1,"message":"288","line":7,"column":10,"nodeType":"274","messageId":"275","endLine":7,"endColumn":22},{"ruleId":"272","severity":1,"message":"289","line":7,"column":24,"nodeType":"274","messageId":"275","endLine":7,"endColumn":33},{"ruleId":"272","severity":1,"message":"290","line":10,"column":10,"nodeType":"274","messageId":"275","endLine":10,"endColumn":19},{"ruleId":"272","severity":1,"message":"291","line":11,"column":8,"nodeType":"274","messageId":"275","endLine":11,"endColumn":13},{"ruleId":"272","severity":1,"message":"292","line":11,"column":17,"nodeType":"274","messageId":"275","endLine":11,"endColumn":22},{"ruleId":"272","severity":1,"message":"293","line":23,"column":10,"nodeType":"274","messageId":"275","endLine":23,"endColumn":14},{"ruleId":"272","severity":1,"message":"294","line":23,"column":16,"nodeType":"274","messageId":"275","endLine":23,"endColumn":23},{"ruleId":"295","severity":1,"message":"296","line":46,"column":13,"nodeType":"297","endLine":81,"endColumn":4},{"ruleId":"295","severity":1,"message":"298","line":81,"column":6,"nodeType":"299","endLine":81,"endColumn":8,"suggestions":"300"},{"ruleId":"276","severity":1,"message":"277","line":86,"column":3,"nodeType":"278","messageId":"279","endLine":129,"endColumn":4},{"ruleId":"276","severity":1,"message":"277","line":88,"column":7,"nodeType":"278","messageId":"279","endLine":122,"endColumn":8},{"ruleId":"301","severity":1,"message":"302","line":123,"column":5,"nodeType":"303","messageId":"304","endLine":128,"endColumn":9},{"ruleId":"272","severity":1,"message":"305","line":3,"column":10,"nodeType":"274","messageId":"275","endLine":3,"endColumn":26},{"ruleId":"295","severity":1,"message":"296","line":25,"column":13,"nodeType":"297","endLine":61,"endColumn":4},{"ruleId":"272","severity":1,"message":"306","line":30,"column":13,"nodeType":"274","messageId":"275","endLine":30,"endColumn":19},{"ruleId":"295","severity":1,"message":"307","line":61,"column":6,"nodeType":"299","endLine":61,"endColumn":8,"suggestions":"308"},{"ruleId":"276","severity":1,"message":"277","line":82,"column":3,"nodeType":"278","messageId":"279","endLine":103,"endColumn":4},{"ruleId":"280","severity":1,"message":"281","line":84,"column":21,"nodeType":"282","messageId":"283","endLine":84,"endColumn":23},{"ruleId":"295","severity":1,"message":"296","line":16,"column":13,"nodeType":"297","endLine":26,"endColumn":4},{"ruleId":"276","severity":1,"message":"277","line":47,"column":3,"nodeType":"278","messageId":"279","endLine":74,"endColumn":4},{"ruleId":"295","severity":1,"message":"296","line":7,"column":19,"nodeType":"297","endLine":13,"endColumn":14},{"ruleId":"295","severity":1,"message":"309","line":13,"column":15,"nodeType":"299","endLine":13,"endColumn":17,"suggestions":"310"},{"ruleId":"272","severity":1,"message":"292","line":2,"column":17,"nodeType":"274","messageId":"275","endLine":2,"endColumn":22},{"ruleId":"272","severity":1,"message":"311","line":21,"column":7,"nodeType":"274","messageId":"275","endLine":21,"endColumn":18},{"ruleId":"272","severity":1,"message":"312","line":4,"column":13,"nodeType":"274","messageId":"275","endLine":4,"endColumn":20},{"ruleId":"272","severity":1,"message":"313","line":14,"column":10,"nodeType":"274","messageId":"275","endLine":14,"endColumn":28},{"ruleId":"272","severity":1,"message":"314","line":14,"column":30,"nodeType":"274","messageId":"275","endLine":14,"endColumn":51},{"ruleId":"272","severity":1,"message":"315","line":17,"column":18,"nodeType":"274","messageId":"275","endLine":17,"endColumn":27},{"ruleId":"295","severity":1,"message":"296","line":19,"column":13,"nodeType":"297","endLine":27,"endColumn":4},{"ruleId":"272","severity":1,"message":"306","line":20,"column":11,"nodeType":"274","messageId":"275","endLine":20,"endColumn":17},{"ruleId":"276","severity":1,"message":"277","line":35,"column":3,"nodeType":"278","messageId":"279","endLine":142,"endColumn":4},{"ruleId":"272","severity":1,"message":"316","line":3,"column":10,"nodeType":"274","messageId":"275","endLine":3,"endColumn":20},{"ruleId":"272","severity":1,"message":"317","line":4,"column":8,"nodeType":"274","messageId":"275","endLine":4,"endColumn":32},{"ruleId":"272","severity":1,"message":"318","line":5,"column":8,"nodeType":"274","messageId":"275","endLine":5,"endColumn":29},{"ruleId":"272","severity":1,"message":"319","line":6,"column":8,"nodeType":"274","messageId":"275","endLine":6,"endColumn":26},{"ruleId":"272","severity":1,"message":"320","line":21,"column":10,"nodeType":"274","messageId":"275","endLine":21,"endColumn":23},{"ruleId":"272","severity":1,"message":"321","line":21,"column":25,"nodeType":"274","messageId":"275","endLine":21,"endColumn":41},{"ruleId":"295","severity":1,"message":"296","line":25,"column":13,"nodeType":"297","endLine":33,"endColumn":4},{"ruleId":"272","severity":1,"message":"306","line":26,"column":11,"nodeType":"274","messageId":"275","endLine":26,"endColumn":17},{"ruleId":"272","severity":1,"message":"322","line":43,"column":12,"nodeType":"274","messageId":"275","endLine":43,"endColumn":23},{"ruleId":"276","severity":1,"message":"277","line":63,"column":3,"nodeType":"278","messageId":"279","endLine":173,"endColumn":4},{"ruleId":"272","severity":1,"message":"323","line":1,"column":17,"nodeType":"274","messageId":"275","endLine":1,"endColumn":25},{"ruleId":"272","severity":1,"message":"323","line":1,"column":17,"nodeType":"274","messageId":"275","endLine":1,"endColumn":25},{"ruleId":"272","severity":1,"message":"292","line":1,"column":8,"nodeType":"274","messageId":"275","endLine":1,"endColumn":13},{"ruleId":"272","severity":1,"message":"316","line":10,"column":3,"nodeType":"274","messageId":"275","endLine":10,"endColumn":13},{"ruleId":"272","severity":1,"message":"324","line":11,"column":3,"nodeType":"274","messageId":"275","endLine":11,"endColumn":11},{"ruleId":"272","severity":1,"message":"325","line":12,"column":3,"nodeType":"274","messageId":"275","endLine":12,"endColumn":8},{"ruleId":"272","severity":1,"message":"326","line":39,"column":15,"nodeType":"274","messageId":"275","endLine":39,"endColumn":20},{"ruleId":"295","severity":1,"message":"327","line":65,"column":6,"nodeType":"299","endLine":65,"endColumn":8,"suggestions":"328"},{"ruleId":"329","severity":1,"message":"330","line":1,"column":1,"nodeType":"331","endLine":162,"endColumn":3},{"ruleId":"272","severity":1,"message":"332","line":5,"column":17,"nodeType":"274","messageId":"275","endLine":5,"endColumn":25},{"ruleId":"272","severity":1,"message":"323","line":1,"column":17,"nodeType":"274","messageId":"275","endLine":1,"endColumn":25},{"ruleId":"272","severity":1,"message":"333","line":1,"column":27,"nodeType":"274","messageId":"275","endLine":1,"endColumn":36},{"ruleId":"272","severity":1,"message":"292","line":6,"column":8,"nodeType":"274","messageId":"275","endLine":6,"endColumn":13},{"ruleId":"272","severity":1,"message":"334","line":9,"column":10,"nodeType":"274","messageId":"275","endLine":9,"endColumn":20},{"ruleId":"272","severity":1,"message":"335","line":9,"column":22,"nodeType":"274","messageId":"275","endLine":9,"endColumn":35},{"ruleId":"272","severity":1,"message":"333","line":1,"column":27,"nodeType":"274","messageId":"275","endLine":1,"endColumn":36},{"ruleId":"272","severity":1,"message":"291","line":5,"column":8,"nodeType":"274","messageId":"275","endLine":5,"endColumn":13},{"ruleId":"272","severity":1,"message":"336","line":7,"column":10,"nodeType":"274","messageId":"275","endLine":7,"endColumn":15},{"ruleId":"272","severity":1,"message":"313","line":19,"column":10,"nodeType":"274","messageId":"275","endLine":19,"endColumn":28},{"ruleId":"272","severity":1,"message":"314","line":19,"column":30,"nodeType":"274","messageId":"275","endLine":19,"endColumn":51},{"ruleId":"280","severity":1,"message":"281","line":36,"column":40,"nodeType":"282","messageId":"283","endLine":36,"endColumn":42},{"ruleId":"272","severity":1,"message":"313","line":9,"column":10,"nodeType":"274","messageId":"275","endLine":9,"endColumn":28},{"ruleId":"272","severity":1,"message":"314","line":9,"column":30,"nodeType":"274","messageId":"275","endLine":9,"endColumn":51},{"ruleId":"280","severity":1,"message":"281","line":37,"column":40,"nodeType":"282","messageId":"283","endLine":37,"endColumn":42},{"ruleId":"280","severity":1,"message":"281","line":43,"column":27,"nodeType":"282","messageId":"283","endLine":43,"endColumn":29},{"ruleId":"280","severity":1,"message":"281","line":74,"column":22,"nodeType":"282","messageId":"283","endLine":74,"endColumn":24},{"ruleId":"272","severity":1,"message":"333","line":1,"column":17,"nodeType":"274","messageId":"275","endLine":1,"endColumn":26},{"ruleId":"272","severity":1,"message":"323","line":1,"column":28,"nodeType":"274","messageId":"275","endLine":1,"endColumn":36},{"ruleId":"272","severity":1,"message":"337","line":2,"column":8,"nodeType":"274","messageId":"275","endLine":2,"endColumn":16},{"ruleId":"272","severity":1,"message":"317","line":3,"column":8,"nodeType":"274","messageId":"275","endLine":3,"endColumn":32},{"ruleId":"272","severity":1,"message":"286","line":4,"column":10,"nodeType":"274","messageId":"275","endLine":4,"endColumn":21},{"ruleId":"272","severity":1,"message":"338","line":5,"column":10,"nodeType":"274","messageId":"275","endLine":5,"endColumn":29},{"ruleId":"272","severity":1,"message":"339","line":11,"column":9,"nodeType":"274","messageId":"275","endLine":11,"endColumn":15},{"ruleId":"272","severity":1,"message":"340","line":20,"column":9,"nodeType":"274","messageId":"275","endLine":20,"endColumn":17},{"ruleId":"280","severity":1,"message":"281","line":37,"column":36,"nodeType":"282","messageId":"283","endLine":37,"endColumn":38},{"ruleId":"295","severity":1,"message":"296","line":13,"column":13,"nodeType":"297","endLine":30,"endColumn":4},{"ruleId":"295","severity":1,"message":"307","line":30,"column":6,"nodeType":"299","endLine":30,"endColumn":8,"suggestions":"341"},{"ruleId":"276","severity":1,"message":"277","line":36,"column":3,"nodeType":"278","messageId":"279","endLine":52,"endColumn":4},"no-native-reassign",["342"],"no-negated-in-lhs",["343"],"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'SelectedItems' is defined but never used.","'GiKnifeFork' is defined but never used.","'IconContext' is defined but never used.","'BsPersonFill' is defined but never used.","'CustomDialog' is defined but never used.","'useDialog' is defined but never used.","'addMotion' is defined but never used.","'Axios' is defined but never used.","'axios' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'action'. Either include it or remove the dependency array.","ArrayExpression",["344"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'getMotionChoices' is defined but never used.","'result' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.location.state'. Either include it or remove the dependency array.",["345"],"React Hook useEffect has a missing dependency: 'props.motionID'. Either include it or remove the dependency array.",["346"],"'currentUser' is assigned a value but never used.","'GiIcons' is defined but never used.","'selectedSuggestion' is assigned a value but never used.","'setSelectedSuggestion' is assigned a value but never used.","'setAction' is assigned a value but never used.","'getChoices' is defined but never used.","'BuildOwnerSuggestionPage' is defined but never used.","'BuildMotionWinnerPage' is defined but never used.","'BuildFinalVotePage' is defined but never used.","'confirmedVote' is assigned a value but never used.","'setConfirmedVote' is assigned a value but never used.","'handleClick' is defined but never used.","'useState' is defined but never used.","'getUsers' is defined but never used.","'hello' is defined but never used.","'addMe' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleApiCall'. Either include it or remove the dependency array.",["347"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'setState' is assigned a value but never used.","'useEffect' is defined but never used.","'suggestion' is assigned a value but never used.","'setSuggestion' is assigned a value but never used.","'async' is defined but never used.","'HomePage' is defined but never used.","'FaLongArrowAltRight' is defined but never used.","'dialog' is assigned a value but never used.","'choiceId' is assigned a value but never used.",["348"],"no-global-assign","no-unsafe-negation",{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"351","fix":"357"},"Update the dependencies array to be: [action]",{"range":"358","text":"359"},"Update the dependencies array to be: [props.location.state]",{"range":"360","text":"361"},"Update the dependencies array to be: [props.motionID]",{"range":"362","text":"363"},"Update the dependencies array to be: [handleApiCall]",{"range":"364","text":"365"},{"range":"366","text":"361"},[2653,2655],"[action]",[2189,2191],"[props.location.state]",[546,548],"[props.motionID]",[1806,1808],"[handleApiCall]",[1039,1041]]